name: Main branch workflows

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}
  workflow_run:
    workflows: ["Non-main branch workflows"]
    types: [completed]

permissions:
  contents: read
  pages: write        # needed for Pages deploy
  id-token: write     # needed for OIDC auth

concurrency:
  group: pages
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-deploy-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      # ---------- protoc cache/install (for prost-build etc.) ----------
      - name: Cache protoc
        id: cache-protoc
        uses: actions/cache@v4
        with:
          path: ~/protoc
          key: protoc-${{ runner.os }}-v25.1
          restore-keys: |
            protoc-${{ runner.os }}-

      - name: Install protoc
        if: steps.cache-protoc.outputs.cache-hit != 'true'
        run: |
          set -euxo pipefail
          mkdir -p ~/protoc
          cd ~/protoc
          curl -L https://github.com/protocolbuffers/protobuf/releases/download/v25.1/protoc-25.1-linux-x86_64.zip -o protoc.zip
          unzip -q protoc.zip
          chmod +x bin/protoc

      - name: Setup protoc PATH
        run: |
          echo "$HOME/protoc/bin" >> $GITHUB_PATH
          echo "PROTOC=$HOME/protoc/bin/protoc" >> $GITHUB_ENV

      # ---------- Rust caches ----------
      - name: Cache Rust
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # ---------- Build docs (crate only) ----------
      - name: Build docs (crate only, no deps)
        env:
          RUSTDOCFLAGS: "-Dwarnings --cfg docsrs --html-in-header doc-header.html"
          CARGO_INCREMENTAL: "0"
          CARGO_NET_RETRY: "10"
        run: |
          set -euxo pipefail
          # Optional tiny style tweak
          cat > doc-header.html <<'HTML'
          <style>
            .rustdoc-toggle > summary { font-weight: 600; }
            .search-input { border-radius: 6px; }
          </style>
          HTML

          echo "Using protoc: $(which protoc) ($(protoc --version || true))"
          cargo doc --no-deps --all-features --package gos --lib --jobs 2
          test -f target/doc/gos/index.html

      # ---------- Re-root crate docs to site root (no redirect) ----------
      - name: Stage docs for Pages (copy assets + rewrite paths)
        shell: bash
        run: |
          set -euxo pipefail

          rm -rf public
          mkdir -p public

          # 1) Copy the crate pages
          cp -R target/doc/gos/* public/

          # 2) Copy shared rustdoc assets that normally live one level up
          shopt -s nullglob
          for p in target/doc/*.css target/doc/*.js target/doc/*.html; do
            cp "$p" public/
          done
          for d in src theme static.files; do
            if [ -d "target/doc/$d" ]; then
              cp -R "target/doc/$d" public/
            fi
          done

          # 3) Rewrite asset paths from ../ to ./ in every HTML file
          #    Use a loop for portability across GNU/BSD sed.
          while IFS= read -r -d '' f; do
            sed -i.bak 's|href="\.\./|href="./|g; s|src="\.\./|src="./|g' "$f"
            rm -f "$f.bak"
          done < <(find public -type f -name '*.html' -print0)

          # Sanity: ensure CSS is present so we won't render unstyled
          ls -1 public/*.css >/dev/null

      # ---------- Deploy ----------
      - uses: actions/configure-pages@v5

      - uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: build-and-deploy-docs
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
